export const anilistDetailQuery = `query Query($id: Int) { Media(id: $id, type: ANIME) { id idMal title { romaji english native userPreferred } type format status description startDate { year month day } endDate { year month day } season seasonYear episodes duration countryOfOrigin isLicensed trailer { id site thumbnail } updatedAt coverImage { extraLarge large medium color } bannerImage genres synonyms averageScore popularity isAdult source nextAiringEpisode { airingAt timeUntilAiring episode } studios(isMain: true) { edges { id isMain node { id name } } } relations { edges { relationType node { id idMal title { romaji english native userPreferred } type format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } } } characters(page: 1, perPage: 6) { edges { role node { name { first last full userPreferred } id image { large medium } } voiceActors(language: JAPANESE) { id name { first last full userPreferred } languageV2 image { large medium } } } } recommendations(page: 1, perPage: 10) { edges { node { mediaRecommendation { id idMal title { romaji english native userPreferred } type format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } } } } } }`;

export const anilistCharacterQuery = `query Page($id: Int, $page: Int, $perPage: Int) { Media(id: $id) { characters(page: $page, perPage: $perPage) { edges { role node { name { first last full userPreferred } id image { large medium } } voiceActors { id name { first last full userPreferred } image { large medium } languageV2 } } pageInfo { currentPage hasNextPage } } } }`;

export const anilistSearchQuery = `query Page($page: Int, $perPage: Int, $season: MediaSeason, $seasonYear: Int, $type: MediaType, $format: MediaFormat, $status: MediaStatus, $isAdult: Boolean, $search: String, $formatIn: [MediaFormat], $statusIn: [MediaStatus], $genreIn: [String], $averageScoreGreater: Int, $averageScoreLesser: Int, $sort: [MediaSort]) { Page(page: $page, perPage: $perPage) { media(season: $season, seasonYear: $seasonYear, type: $type, format: $format, status: $status, isAdult: $isAdult, search: $search, format_in: $formatIn, status_in: $statusIn, genre_in: $genreIn, averageScore_greater: $averageScoreGreater, averageScore_lesser: $averageScoreLesser, sort: $sort) { id idMal title { romaji english native userPreferred } format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } pageInfo { currentPage hasNextPage } } }`;

export const anilistAiringQuery = `query Query($page: Int, $perPage: Int, $airingAtGreater: Int, $airingAtLesser: Int) { Page(page: $page, perPage: $perPage) { airingSchedules(notYetAired: true, airingAt_greater: $airingAtGreater, airingAt_lesser: $airingAtLesser) { media { id idMal title { romaji english native userPreferred } format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } } pageInfo { currentPage hasNextPage } } }`;

export const anilistTitleQuery = `query Query($id: Int) { Media(id: $id) { title { romaji english native userPreferred } } }`;
