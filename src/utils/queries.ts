export const anilistDetailQuery = `query Query($id: Int, $type: MediaType, $charPage: Int, $charPerPage: Int, $actorLang: StaffLanguage, $recomPage: Int, $recomPerPage: Int, $isMainStudio: Boolean) { Media(id: $id, type: $type) { id idMal title { romaji english native userPreferred } type format status description startDate { year month day } endDate { year month day } season seasonYear episodes duration countryOfOrigin isLicensed trailer { id site thumbnail } updatedAt coverImage { extraLarge large medium color } bannerImage genres synonyms averageScore popularity isAdult source nextAiringEpisode { airingAt timeUntilAiring episode } studios(isMain: $isMainStudio) { edges { id isMain node { id name } } } relations { edges { relationType node { id idMal title { romaji english native userPreferred } type format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } } } characters(page: $charPage, perPage: $charPerPage) { edges { role node { name { first last full userPreferred } id image { large medium } } voiceActors(language: $actorLang) { id name { first last full userPreferred } languageV2 image { large medium } } } } recommendations(page: $recomPage, perPage: $recomPerPage) { edges { node { mediaRecommendation { id idMal title { romaji english native userPreferred } type format status episodes coverImage { extraLarge large medium color } bannerImage averageScore nextAiringEpisode { airingAt timeUntilAiring episode } } } } } } }`;

export const anilistCharacterQuery = `query Page($id: Int, $page: Int, $perPage: Int) { Media(id: $id) { characters(page: $page, perPage: $perPage) { edges { role node { name { first last full userPreferred } id image { large medium } } voiceActors { id name { first last full userPreferred } image { large medium } languageV2 } } pageInfo { currentPage hasNextPage } } } }`;

export const anilistListQuery = ``

export const anilistSearchQuery = ``